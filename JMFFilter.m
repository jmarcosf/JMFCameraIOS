/***************************************************************************/
/*                                                                         */
/*  JMFFilter.m                                                            */
/*  Copyright (c) 2014 Simarks. All rights reserved.                       */
/*                                                                         */
/*  Description: JMFCameraIOS                                              */
/*               U-Tad - Pr√°ctica iOS Avanzado                             */
/*               CoreData Filter Entity Class implementation file          */
/*                                                                         */
/*       Author: Jorge Marcos Fernandez                                    */
/*         NOTE: Generated by mogenerator                                  */
/*                                                                         */
/***************************************************************************/
#import "JMFFilter.h"

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*  FilterProperties Singleton Interface implementation                    */
/*                                                                         */
/*  NOTE: For this practice only NSNumber generic Properties are supported */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
@implementation FilterProperties

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  filterProperties                                                       */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
+ (NSArray*)filterProperties
{
    static NSArray* filterProperties = nil;
    @synchronized( self )
    {
        if( !filterProperties )
        {
            filterProperties = [[NSArray alloc] initWithObjects:
                                kCIInputScaleKey, kCIInputAspectRatioKey, kCIInputRadiusKey, kCIInputAngleKey, kCIInputWidthKey,
                                kCIInputSharpnessKey, kCIInputIntensityKey, kCIInputEVKey, kCIInputSaturationKey, kCIInputBrightnessKey,
                                kCIInputContrastKey, nil];
        }
    }
    return filterProperties;
}

@end

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  JMFFilter Class Interface                                              */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
@interface JMFFilter ()
{
    NSFetchedResultsController* propertiesResultsController;
}

@end

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*  JMFFilter Class implementation                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
@implementation JMFFilter

#pragma mark - Key Value Observing Methods
/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*  Key Value Observing Methods                                            */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  observableKeys                                                         */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
+ (NSArray*)observableKeys
{
    return @[JMFNamedEntityAttributes.name, JMFNamedEntityAttributes.creationDate, JMFFilterRelationships.photo];
}

#pragma mark - Initialization Methods
/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*  Initialization Methods                                                 */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  filterWithName:photo:inContext:                                        */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
+ (instancetype)filterWithName:(NSString*)name photo:(JMFPhoto*)photo position:(NSInteger)position inContext:(NSManagedObjectContext*)context
{
    JMFFilter* filter = [JMFFilter insertInManagedObjectContext:context];
    
    filter.name = name;
    filter.photo = photo;
    filter.position = [NSNumber numberWithInteger:position];
    return filter;
}

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  awakeFromInsert                                                        */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
- (void)awakeFromInsert
{
    [super awakeFromInsert];
    [self setActive:NO];
}

#pragma mark - Instance Methods
/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*  Instance Methods                                                       */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  setNewName:                                                            */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
- (void)setNewName:(NSString*)newName
{
    if( ![newName isEqualToString:self.name] )
    {
        [self deleteProperties];
        self.name = newName;
        [self createProperties];
    }
}

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  createProperties                                                       */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
- (void)createProperties
{
    CIFilter* ciFilter = [CIFilter filterWithName:self.name];
    if( ciFilter != nil )
    {
        [ciFilter setDefaults];
        for( NSString* property in [ FilterProperties filterProperties] )
        {
            NSDictionary* filterParams = [[ciFilter attributes] objectForKey:property];
            if( filterParams != nil )
            {
                JMFFilterProperty* filterProperty = [JMFFilterProperty propertyWithName:property filter:self inContext:self.managedObjectContext];
                NSNumber* number;

                filterProperty.defaultValue = [NSNumber numberWithFloat:0.0f];
                if( ( number = [filterParams objectForKey:@"CIAttributeDefault"] ) != nil ) filterProperty.defaultValue = number;

                filterProperty.max = [NSNumber numberWithFloat:1000.0f];
                if( ( number = [filterParams objectForKey:@"CIAttributeMax"] ) != nil ) filterProperty.max = number;

                filterProperty.min = [NSNumber numberWithFloat:0.0f];
                if( ( number = [filterParams objectForKey:@"CIAttributeMin"] ) != nil ) filterProperty.min = number;
                
                filterProperty.value = filterProperty.defaultValue;
                filterProperty.step = [NSNumber numberWithFloat:0.0f];
                if( filterProperty.defaultValue != 0 ) filterProperty.step = [NSNumber numberWithFloat:filterProperty.defaultValue.floatValue / 10];
            }
        }
    }
}

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  deleteProperties                                                       */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
- (void)deleteProperties
{
    for( JMFFilterProperty* property in [propertiesResultsController fetchedObjects] )
    {
        [self.managedObjectContext deleteObject:property];
    }
    propertiesResultsController = nil;
}

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  isActive                                                               */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
- (BOOL)isActive
{
    return self.activeValue;
}

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  isValidFilter                                                          */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
- (BOOL)isValidFilter
{
    BOOL bValid = NO;
    if( self.name != nil && ![self.name isEqualToString:@""] )
    {
        if( ![self.name isEqualToString:@"CIFilterNone"] )
        {
            bValid = YES;
        }
    }
    return bValid;
}

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  activeToString                                                         */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
- (NSString*)activeToString
{
    NSString* localizedString = ( self.activeValue ) ? @"IDS_YES" : @"IDS_NO";
    return ResString( localizedString );
}

/***************************************************************************/
/*                                                                         */
/*                                                                         */
/*  propertiesResultsController:                                           */
/*                                                                         */
/*                                                                         */
/***************************************************************************/
- (NSFetchedResultsController*)propertiesResultsController
{
    if( propertiesResultsController == nil )
    {
        //Query
        NSFetchRequest* request = [NSFetchRequest fetchRequestWithEntityName:[JMFFilterProperty entityName]];
        request.sortDescriptors = @[[NSSortDescriptor sortDescriptorWithKey:JMFNamedEntityAttributes.name ascending:YES]];
        request.predicate = [NSPredicate predicateWithFormat:@"filter == %@", self ];
        propertiesResultsController = [[NSFetchedResultsController alloc] initWithFetchRequest:request
                                                                          managedObjectContext:self.managedObjectContext
                                                                            sectionNameKeyPath:nil
                                                                                     cacheName:nil];
//      propertiesResultsController.delegate = self;
        NSError *error;
        [propertiesResultsController performFetch:&error];
        if( error && COREDATA_DEBUG ) NSLog( @"Fetch Filters Properties error: %@", error );
    }
    return propertiesResultsController;
}

@end
